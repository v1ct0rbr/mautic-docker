
x-mautic-volumes:
  &mautic-volumes
  - ./mautic/config:/var/www/html/config:z
  - ./mautic/logs:/var/www/html/var/logs:z
  - ./mautic/media/files:/var/www/html/docroot/media/files:z
  - ./mautic/media/images:/var/www/html/docroot/media/images:z
  - ./cron:/opt/mautic/cron:z

services:
  mautic-db:
    image: mysql:8.0
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    volumes: 
      - mysql-data:/var/lib/mysql
    healthcheck:
      test: mysqladmin --user=$$MYSQL_USER --password=$$MYSQL_PASSWORD ping
      start_period: 5s
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - default

  rabbitmq:
    image: rabbitmq:3
    environment:
      - RABBITMQ_DEFAULT_VHOST=${RABBITMQ_DEFAULT_VHOST}
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
    volumes: 
      - rabbitmq-data:/var/lib/rabbitmq
    networks:
      - default

  mautic_web:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        MAUTIC_VERSION: "${MAUTIC_VERSION}"  # Corrigido o uso de args
    links:
      - mautic-db:mysql
    ports:
      - 8003:80
    volumes: *mautic-volumes   

    environment:
      - DOCKER_MAUTIC_LOAD_TEST_DATA=${DOCKER_MAUTIC_LOAD_TEST_DATA}
      - DOCKER_MAUTIC_RUN_MIGRATIONS=${DOCKER_MAUTIC_RUN_MIGRATIONS}
     
    env_file:
      - .env
    healthcheck:
      test: curl http://localhost
      start_period: 5s
      interval: 5s
      timeout: 5s
      retries: 100
    depends_on:
      mautic-db:
        condition: service_healthy
    networks:
      - default
 
  mautic_cron:
    image: mautic/mautic:5-apache
    build:
      context: .
      dockerfile: Dockerfile
      args:
        MAUTIC_VERSION: "${MAUTIC_VERSION}"  # Corrigido o uso de args
    links:
      - mautic-db:mysql
    volumes: *mautic-volumes
        
    environment:
      - DOCKER_MAUTIC_ROLE=mautic_cron
    env_file:
      - .env
    healthcheck:
      test: curl http://localhost
      start_period: 5s
      interval: 5s
      timeout: 5s
      retries: 100
    depends_on:
      mautic_web:
        condition: service_healthy
    networks:
      - default

  mautic_worker:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        MAUTIC_VERSION: "${MAUTIC_VERSION}"  # Corrigido o uso de args
    links:
      - mautic-db:mysql
    volumes: *mautic-volumes
   
    environment:
      - DOCKER_MAUTIC_ROLE=mautic_worker
    env_file:
      - .env
    depends_on:
      mautic_web:
        condition: service_healthy
    networks:
      - default

volumes:
  mysql-data:
  rabbitmq-data:

networks:
  default:
    name: ${COMPOSE_PROJECT_NAME}-docker